import{createCard,createGridLayout}from"./RenderObjs/CardRender.js";import{createModal,createSettingsMenu}from"./RenderObjs/SettingsMenu.js";import{bcModSdk}from"./src/BCModSdk.js";const cssLink=document.createElement("link");cssLink.href=new URL("./Style/styles.css",import.meta.url).href,cssLink.rel="stylesheet",document.head.appendChild(cssLink),function(){"use strict";const e=Object.freeze({VIEW:"ViewDeck",EDIT:"EditDeck",SETTINGS:"Settings"}),t=Object.freeze({ALL_CARDS:{value:"All Cards",text:"All Cards"},SELECTED_CARDS:{value:"Selected Cards",text:"Selected Cards"},EVENTS_CARDS:{value:"Events Cards",text:"Event Cards"},UNGROUPED:{value:"Ungrouped",text:"Ungrouped"},REWARD_CARDS:{value:"Reward Cards",text:"Reward Cards"},LIABILITY:{value:"Liability",text:"Liability"},STAFF:{value:"Staff",text:"Staff"},POLICE:{value:"Police",text:"Police"},CRIMINAL:{value:"Criminal",text:"Criminal"},FETISHIST:{value:"Fetishist",text:"Fetishist"},PORN_ACTRESS:{value:"PornActress",text:"Porn Actress"},MAID:{value:"Maid",text:"Maid"},ASYLUM:{value:"Asylum",text:"Asylum"},DOMINANT_MISTRESS:{value:"DominantMistress",text:"Dominant / Mistress"},ABDL:{value:"ABDL",text:"ABDL"},COLLEGE:{value:"College",text:"College"},SHIBARI_SENSEI_KNOT:{value:"ShibariSenseiKnot",text:"Shibari / Sensei / Knot"},PET:{value:"PetOwner",text:"Pet / Owner"}}),n=new URL(".",import.meta.url).href,l=new URL("src/Images/MoonCETopPanelBackground.jpg",n).href,o=(new URL("src/Images/MoonCECardCover.png",n).href,new URL("src/Images/IsAddon.png",n).href),r=new URL("src/Images/IsOpenMenu.png",n).href;let a=[],s=[],i=[],d=[],c=[],u=[],y=[],p=t.ALL_CARDS.value,C=0,h=e.VIEW,m=!1,g=[],f=null;const b="1.2vw",x="1%",v="0.5%",S="92%",E=`calc(100% - ${S})`,I="#3357FF",k="#006400",T=["KeyW","KeyA","KeyS","KeyD","KeyZ","KeyQ"],D="1.2.16",L="Hidden",w=bcModSdk.registerMod({name:"MoonCEBC",fullName:"Moon Cards Editor BC",version:D,repository:"https://github.com/LunarKitsunify/MoonCEBC"});function M(e,t,n,l,o,r,a,s=null,i="right"){const d=ElementButton.Create(`ToolTipButton_${Math.random().toString(36).substring(2,9)}`,n,{tooltip:s,tooltipPosition:i},{button:{style:{marginLeft:r,marginRight:a,display:"flex",height:o,width:l,justifyContent:"center",alignItems:"center",textAlign:"center",userSelect:"none"},innerHTML:e?`<span style="display: flex; justify-content: center; align-items: center; width: 100%; height: 100%; font-size: ${b};">${e}</span>`:`<img src="${t}" alt="Button Image" style="max-width: 90%; max-height: 90%; object-fit: contain; display: block; margin: auto;" />`},tooltip:{style:{}}});return Player.Themed&&Player.Themed.ColorsModule.base&&(d.style.backgroundColor=Player.Themed.ColorsModule.base.main,d.style.borderColor=Player.Themed.ColorsModule.base.accent,d.style.color=Player.Themed.ColorsModule.base.text,d.addEventListener("mouseover",(()=>{d.style.backgroundColor=Player.Themed.ColorsModule.base.accent})),d.addEventListener("mouseout",(()=>{d.style.backgroundColor=Player.Themed.ColorsModule.base.main}))),d}w.hookFunction("MainRun",0,((e,t)=>{t(e),function(){ChatRoomGame;const e="ChatRoom"==CurrentScreen&&!0;e&&"block"!==P.style.display?P.style.display="block":e||"none"===P.style.display||(P.style.display="none")}()})),w.hookFunction("ChatRoomDrawCharacterStatusIcons",0,((e,t)=>{if(0!=ChatRoomHideIconState)return t(e);const[n,l,r,a]=e;return n.MoonCEBC&&DrawImageResize(o,l+347*a,r+5,30*a,30*a),t(e)})),w.hookFunction("ChatRoomCharacterViewDrawOverlay",3,((e,t)=>{if(t(e),0!=ChatRoomHideIconState)return;const[n,l,a,s]=e;n.MoonCEBC&&n.MoonCEBC.IsMenuOpen&&DrawImageResize(r,l+375*s,a+50*s,50*s,50*s),n.MoonCEBC&&DrawImageResize(o,l+347*s,a+5,30*s,30*s)})),w.hookFunction("ChatRoomSync",0,((e,t)=>(ee(),Player.OnlineSharedSettings.MoonCEBC&&(delete Player.OnlineSharedSettings.MoonCEBC,ServerAccountUpdate.QueueData({OnlineSharedSettings:Player.OnlineSharedSettings})),t(e)))),w.hookFunction("ChatRoomSyncMemberJoin",0,((e,t)=>(ee(),t(e)))),w.hookFunction("ChatRoomMessage",0,((e,t)=>{for(let n of e){const l=n;if((!l.Type||l.Type===L)&&"MoonCEBC"===l.Content){const n=Character.find((e=>e.MemberNumber===l.Sender));if(!n)return t(e);const o=te(l);n.MoonCEBC=o}}return t(e)})),async function(){if(await async function(e,t=()=>!1){for(;!e();){if(t())return!1;await new Promise((e=>setTimeout(e,10)))}return!0}((()=>void 0!==Player&&void 0!==Player.MemberNumber)),!ClubCardTextCache){const e="Screens/MiniGame/ClubCard/Text_ClubCard.csv";ClubCardTextCache=TextAllScreenCache.get(e),ClubCardTextCache||(ClubCardTextCache=new TextCache(e),TextAllScreenCache.set(e,ClubCardTextCache))}"ChatRoom"==CurrentScreen&&ee(),console.log(`Moon Cards Editor Loaded! Version: ${D}`)}();const P=document.createElement("button");function R(){if(null==Player.Game.ClubCard)return;const e=f.querySelector("#PlayerDecksSelectId"),t=e.selectedIndex;e.innerHTML="";let n=[];n=null!=Player.Game.ClubCard.DeckName&&Player.Game.ClubCard.DeckName.length>0?Player.Game.ClubCard.DeckName:["","","","","","","","","",""];for(let e=0;e<=9;e++)""==n[e]&&(n[e]=`Deck #${e+1}`);11==n.length&&n.pop(),n.forEach(((t,n)=>{if(null!=t){const l=document.createElement("option");l.value=n,l.textContent=t,Player.Themed&&(l.style.backgroundColor=Player.Themed.ColorsModule.primaryColor,l.style.borderColor=Player.Themed.ColorsModule.accentColor),e.appendChild(l)}})),e.selectedIndex=-1!=t?t:0,A(e)}function A(e){let t=e.value;const n=Player.Game.ClubCard.Deck[t];let l=[],o=[];o=""==n||null==n?[...ClubCardBuilderDefaultDeck]:ne(n);for(let e of o)l.push(a.find((t=>t.ID===e)));const r=Z(l);i=[...r],d=[...r],c=[...r],G(c)}function G(t){for(let n=0;n<30;n++){const l=g[n];if(l&&(l.innerHTML=""),null==t)continue;let o=t[n];if(t&&n<t.length){const t=ClubCardTextCache.get("Text "+o.Name);o.Text=t.replace(/[+-]?\d*\s*fame/gi,(e=>`<span style='color: ${I};'>${e}</span>`)).replace(/[+-]?\d*\s*money/gi,(e=>`<span style='color: ${k};'>${e}</span>`));const n=createCard(o);h==e.EDIT&&i.includes(o)&&n.showSelected(),n.cardButton.addEventListener("click",(()=>{if(h==e.EDIT)if(i.includes(o)){const e=i.findIndex((e=>e.ID===o.ID));i.splice(e,1),n.hideSelected(),B()}else i.push(o),n.showSelected(),B()})),n.cardButton.addEventListener("mouseover",(()=>{if(s!=o){s=o;const e=f.querySelector("#CardInfoPanelId");e&&(e.innerHTML="");const t=createCard(o);o.Reward?t.cardButton.style.border="4.5px solid gold":t.cardButton.style.border="4.5px solid black",t.titleName.classList.add("card-name-info-panel"),t.cardGroupTextElement.classList.add("card-group-info-panel"),t.cardDescriptionTextElement.classList.add("card-description-info-panel"),t.valuePanel.classList.add("value-card-panel-info-panel"),e.appendChild(t.cardButton)}})),l.appendChild(n.cardButton)}}}function B(){const e=f.querySelector("#DeckCardsCounterId"),t=i.length;e.textContent=`Select the cards (${t}/30 - 40)`;const n=t>=30&&t<=40;e.style.color=n?"white":"red"}function N(){const t=f.querySelector("#TopSettingsLeftViewPanelId"),n=f.querySelector("#TopSettingsLeftEditPanelId"),l=f.querySelector("#MoonCEBCDeckNameInputId"),o=f.querySelector("#PlayerDecksSelectId"),r=f.querySelector("#GroupSelectId");t.style.display="none",n.style.display="flex",Player.Themed?l.style.color=Player.Themed.ColorsModule.textColor:l.style.color="black",l.value=o.options[o.selectedIndex].text,r.selectedIndex=0,h=e.EDIT,i=[...d],J(),B()}function q(){const n=f.querySelector("#TopSettingsLeftViewPanelId"),l=f.querySelector("#TopSettingsLeftEditPanelId");n.style.display="flex",l.style.display="none",h=e.VIEW,p=t.ALL_CARDS.value,y=[],u=[],C=0,G(d)}function O(){const n=f.querySelector("#TopSettingsLeftViewPanelId"),l=f.querySelector("#TopSettingsLeftEditPanelId"),o=f.querySelector("#MoonCEBCDeckNameInputId");""!=o.value&&null!=o.value&&o.value.length<=30&&i.length>=30&&i.length<=40&&(n.style.display="flex",l.style.display="none",h=e.VIEW,p=t.ALL_CARDS.value,y=[],u=[],C=0,j(),G(i),R())}function j(e=!0){const t=f.querySelector("#MoonCEBCDeckNameInputId"),n=f.querySelector("#PlayerDecksSelectId"),l=function(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}(i.map((e=>e.ID))),o=n.selectedIndex;if(e){null==Player.Game.ClubCard.DeckName&&(Player.Game.ClubCard.DeckName=["Deck #1","Deck #2","Deck #3","Deck #4","Deck #5","Deck #6","Deck #7","Deck #8","Deck #9","Deck #10"]);const e=t.value;Player.Game.ClubCard.DeckName[o]=e}Player.Game.ClubCard.Deck[o]=l,ServerAccountUpdate.QueueData({Game:Player.Game},!0)}function z(){if(0!=C){C-=1;let e=X();e?(c=[...e],G(c)):C+=1}}function _(){C+=1;let e=X();e?(c=[...e],G(c)):C-=1}function U(){i=[],G(c),B()}function V(){F("Export Deck",function(e){let t=e.map((e=>42^e)).join(",");return btoa(t)}(i.map((e=>e.ID))),null)}function $(){F("Import Deck","",H)}function H(e){const t=[],n=function(e){try{if(!e||"string"!=typeof e)throw new Error("Invalid input: Not a string");let t;try{t=atob(e)}catch(e){throw new Error("Invalid input: Not a valid Base64 string")}let n=t.split(",").map((e=>parseInt(e,10))).filter((e=>!isNaN(e)));if(n.length<30||n.length>40)throw new Error(`Invalid deck size: Expected 30-40, got ${n.length}`);let l=n.map((e=>42^e));if(!l.every((e=>a.some((t=>t.ID===e)))))throw new Error("Invalid deck: Some IDs do not exist in the card database");return l}catch(e){return console.error("decodeEIDeck Error:",e.message),null}}(e.trim());if(null==n)return!1;for(let e of n)t.push(a.find((t=>t.ID===e)));return i=t,j(!1),A(f.querySelector("#PlayerDecksSelectId")),!0}function F(e,t,n){const o=document.createElement("div");o.style.cssText="\n        position: fixed;\n        inset: 0;\n        background: rgba(0, 0, 0, 0.75);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    ";const r=document.createElement("div");r.style.cssText="\n        position: relative;\n        width: min(90vw, 400px);\n        height: min(80vh, 250px);\n        background: white;\n        border-radius: 8px;\n        border: 1px solid black;\n        display: flex;\n        flex-direction: column;\n        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n        overflow: auto;\n    ",r.style.backgroundImage="url('Backgrounds/ClubCardPlayBoard1.jpg')";const a=document.createElement("div");a.style.cssText="\n        height: 20%;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 5%;\n        font-size: 1.2vw;\n        font-weight: bold;\n        border-bottom: 1px solid #ccc;\n    ",a.style.backgroundImage=`url(${l})`;const s=document.createElement("span");s.textContent=e||"Enter data",s.style.cssText="\n        color: white;\n        font-size: min(1.5vw, 18px);\n        font-weight: bold;\n        text-align: left;\n        flex-grow: 1;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    ";const i=document.createElement("div");i.style.display="flex",i.style.gap="10px";const d=document.createElement("textarea");d.value=t,d.style.cssText="\n        width: 95%;\n        height: 95%;\n        padding: 2%;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        font-size: 1vw;\n        text-align: left;\n    ";let c=null;t&&""!=t&&(c=W("📋","Copy",(()=>{navigator.clipboard.writeText(d.value).then((()=>K(c,"✅"))).catch((()=>K(c,"❌")))})));const u=W("✖","Close",(()=>f.removeChild(o)));t&&""!=t?i.append(c,u):i.append(u),a.append(s,i);const y=document.createElement("div");y.style.cssText="\n        height: 80%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        gap: 10%;\n    ";const p=document.createElement("div");p.style.cssText="\n        height: 50%;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    ",p.appendChild(d);const C=document.createElement("div");C.style.cssText="\n        height: 25%;\n        width: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    ";const h=document.createElement("button");h.textContent="ОК",h.style.cssText="\n        width: 90%;\n        height: 80%;\n        font-size: 1vw;\n        background: #007bff;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n    ",h.onclick=()=>{"function"==typeof n?n(d.value)&&f.removeChild(o):f.removeChild(o)},C.appendChild(h),y.append(p,C),o.onclick=e=>{e.target===o&&f.removeChild(o)},r.append(a,y),o.appendChild(r),f.appendChild(o)}function K(e,t){const n=e.innerHTML;e.innerHTML=t,setTimeout((()=>e.innerHTML=n),1e3)}function W(e,t,n){const l=document.createElement("button");l.style.cssText="\n        width: 2vw;\n        height: 2vw;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: white;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n        padding: 0;\n        overflow: hidden;\n    ";const o=document.createElement("span");return o.innerHTML=e,o.style.cssText="\n        width: 80%;\n        height: auto;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    ",l.appendChild(o),l.title=t,l.onclick=n,l}function Y(){const e=createModal("settings-modal",f,"Moon Cards Editor Settings"),t=e.addMenuContainer("row");createSettingsMenu(t,Q),e.open()}P.style.backgroundImage="url('Screens/MiniGame/ClubCard/Sleeve/Default.png')",P.style.backgroundSize="cover",P.style.backgroundPosition="center",P.style.position="absolute",P.style.width="2.23%",P.style.height="5%",P.style.bottom="0px",P.style.left="1.5%",P.style.transform="translateX(calc(50% - 45%))",P.style.padding="1px 2px",P.style.display="none",P.addEventListener("click",(function n(){m?(ee(),f&&f.remove(),p=t.ALL_CARDS.value,y=[],u=[],h=e.VIEW,C=0,g=[]):(function(){if(!a||0===a.length||""===a[0].Text){a=[];for(const e of ClubCardList){const t={...e};let n=2;for(;n-- >0;){const e=ClubCardTextGet("Text "+t.Name);if(e&&""!=e){t.Text=e;break}}a.push(t)}}}(),ee(null,!0),function(){const e=document.createElement("div");e.style.position="fixed",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.width="100%",e.style.height="100%",e.style.border="3px solid black",e.style.boxSizing="border-box",e.style.display="block",e.style.zIndex="9999",e.style.backgroundImage="url('Backgrounds/ClubCardPlayBoard1.jpg')",e.style.backgroundSize="cover",e.style.backgroundPosition="center",document.body.appendChild(e),f=e;const o=document.createElement("div");o.style.display="flex",o.style.borderBottom="2px solid black",o.style.boxSizing="border-box",o.style.alignItems="center",o.style.height="7%",o.style.width="100%",o.style.backgroundImage=`url(${l})`,o.style.backgroundRepeat="repeat",e.appendChild(o);const r=document.createElement("div");r.id="TopSettingsLeftViewPanelId",r.style.display="flex",r.style.justifyContent="flex-start",r.style.alignItems="center",r.style.width=S,r.style.height="100%",r.style.boxSizing="border-box",r.style.gap=x,r.style.paddingLeft=v,o.appendChild(r);const a=document.createElement("select");a.id="PlayerDecksSelectId",a.style.width="20%",a.style.height="80%",a.style.alignContent="center",a.style.textAlign="center",a.style.fontSize=b,a.addEventListener("change",(function(){A(a)})),Player.Themed&&(a.style.backgroundColor=Player.Themed.ColorsModule.primaryColor,a.style.borderColor=Player.Themed.ColorsModule.accentColor,a.style.color=Player.Themed.ColorsModule.textColor,a.addEventListener("mouseover",(()=>{a.style.backgroundColor=Player.Themed.ColorsModule.accentColor})),a.addEventListener("mouseout",(()=>{a.style.backgroundColor=Player.Themed.ColorsModule.primaryColor}))),r.appendChild(a);const s=M("Edit Deck",null,N,"15%","80%","5%","5%","Open edit menu","right");r.appendChild(s);const i=M("Export",null,V,"15%","80%","0","0","Export Deck","right"),d=M("Import",null,$,"15%","80%","0","0","Import Deck","right");r.appendChild(i),r.appendChild(d);const h=document.createElement("div");h.id="TopSettingsLeftEditPanelId",h.style.display="none",h.style.justifyContent="flex-start",h.style.alignItems="center",h.style.width=S,h.style.height="100%",h.style.boxSizing="border-box",h.style.gap=x,h.style.paddingLeft=v,h.style.paddingRight=v,o.appendChild(h);const m=document.createElement("input");if(m.id="MoonCEBCDeckNameInputId",m.style.width="20%",m.style.height="80%",m.style.alignContent="center",m.style.textAlign="center",m.style.fontSize=b,m.placeholder="Deck Name",Player.Themed){const e=Player.Themed.ColorsModule.textColor;m.style.color=e,m.addEventListener("input",(t=>{m.value.length>30?m.style.color="red":m.style.color=e}))}else m.addEventListener("input",(e=>{m.value.length>30?m.style.color="red":m.style.color="black"}));m.addEventListener("keydown",(e=>{T.includes(e.code)&&e.stopPropagation()}));const D=document.createElement("select");D.id="GroupSelectId",D.style.width="15%",D.style.height="80%",D.style.alignContent="center",D.style.textAlign="center",D.style.fontSize=b,D.addEventListener("change",(function(){p!=D.value&&(p=D.value,L.value="",J())})),Player.Themed&&(D.style.backgroundColor=Player.Themed.ColorsModule.primaryColor,D.style.borderColor=Player.Themed.ColorsModule.accentColor,D.style.color=Player.Themed.ColorsModule.textColor,D.addEventListener("mouseover",(()=>{D.style.backgroundColor=Player.Themed.ColorsModule.accentColor})),D.addEventListener("mouseout",(()=>{D.style.backgroundColor=Player.Themed.ColorsModule.primaryColor}))),Object.values(t).forEach((e=>{const t=document.createElement("option");t.value=e.value,t.text=e.text,Player.Themed&&(t.style.backgroundColor=Player.Themed.ColorsModule.primaryColor,t.style.borderColor=Player.Themed.ColorsModule.accentColor),D.appendChild(t)}));const L=document.createElement("input");L.id="MoonCEBCSearchCardInputId",L.style.width="10%",L.style.height="80%",L.style.alignContent="center",L.style.textAlign="center",L.style.fontSize=b,L.placeholder="Search Card",L.addEventListener("input",(e=>{const t=e.target.value;if(t&&""!=t){const e=t.toLowerCase(),n=u.filter((t=>{const n=t.Text?.replaceAll(I,"").replaceAll(k,""),l=t.Name.toLowerCase().includes(e),o=n&&n.toLowerCase().includes(e),r=t.Group&&t.Group.some((t=>t.toLowerCase().includes(e)));return l||o||r}));y=n}else y=[];C=0,c=X(),G(c)})),L.addEventListener("keydown",(e=>{T.includes(e.code)&&e.stopPropagation()}));const w=document.createElement("div");w.style.width="20%",w.style.height="100%",w.style.textAlign="center",w.style.alignItems="center",w.style.display="flex",w.style.flexDirection="row",w.style.boxSizing="border-box",w.style.gap="2%";const P=M(null,"Icons/Trash.png",U,"20%","80%","0","0","Clear all cards","left"),B=(M("Default","Icons/Small/Undo.png",null,"16%","80%","0","0","Select default deck","left"),M(null,"Icons/Prev.png",z,"20%","80%","0","0","Previous page of cards","left")),j=M(null,"Icons/Next.png",_,"20%","80%","0","0","Next page of cards","left"),H=M(null,"Icons/Accept.png",O,"20%","80%","0","0","Save deck","left"),F=M(null,"Icons/Cancel.png",q,"20%","80%","0","0","Cancel all changes","left"),K=document.createElement("div");K.id="DeckCardsCounterId",K.style.width="15%",K.style.alignContent="center",K.style.textAlign="center",K.style.pointerEvents="none",K.style.userSelect="none",K.style.fontSize=b,K.style.color="white",w.appendChild(P),w.appendChild(B),w.appendChild(j),w.appendChild(H),w.appendChild(F),h.appendChild(m),h.appendChild(D),h.appendChild(L),h.appendChild(w),h.appendChild(K);const W=document.createElement("div");W.style.display="flex",W.style.flexDirection="row",W.style.justifyContent="flex-end",W.style.alignItems="center",W.style.width=E,W.style.height="100%",W.style.boxSizing="border-box",W.style.paddingRight=v,W.style.paddingLeft=v,W.style.gap=x,o.appendChild(W),M(null,"Icons/General.png",Y,"50%","80%","0","0","Dont Work","left");const Q=M(null,"Icons/Exit.png",n,"50%","80%","0","5%","Exit Addon","left");W.appendChild(Q);const Z=document.createElement("div");Z.style.display="flex",Z.style.flexDirection="row",Z.style.justifyContent="space-between",Z.style.alignItems="center",Z.style.width="100%",Z.style.height="calc(100% - 7%)",Z.style.boxSizing="border-box",e.appendChild(Z),g=createGridLayout(Z);const ee=document.createElement("div");ee.id="CardInfoPanelId",ee.style.height="100%",ee.style.width="20%",ee.style.maxWidth="100%",ee.style.maxHeight="100%",ee.style.boxSizing="border-box",ee.style.position="relative",ee.style.justifyContent="center",ee.style.alignItems="center",ee.style.display="flex",Z.appendChild(ee),R()}()),h=e.VIEW,m=!m})),document.body.appendChild(P);const Q=[{groupName:"General Settings",settings:[{name:"Enable Notifications",shortDescription:"Receive alerts",fullDescription:"Enables notifications for all important updates.",type:"checkbox",defaultValue:!0,onChange:e=>{console.log(`Notifications: ${e}`)}},{name:"Username",shortDescription:"Enter your username",fullDescription:"Your unique username for the system.",type:"text",defaultValue:"User123",onChange:e=>{console.log(`Username updated to: ${e}`)}},{name:"Theme",shortDescription:"Select a theme",fullDescription:"Choose between Light and Dark themes.",type:"dropdown",options:["Light","Dark"],defaultValue:"Light",onChange:e=>{console.log(`Theme changed to: ${e}`)}},{name:"Reset Settings",shortDescription:"Reset all settings to default",fullDescription:"Click this button to reset all settings to their default values.",type:"button",onClick:()=>{console.log("Settings have been reset to default!")}}]}];function J(){let e=[];const n=ne(Player.Game.ClubCard.Reward),l=a.filter((e=>null!=e.Reward));switch(p){case t.ALL_CARDS.value:e=[...a];break;case t.SELECTED_CARDS.value:e=[...i];break;case t.EVENTS_CARDS.value:e=a.filter((e=>"Event"==e.Type));break;case t.UNGROUPED.value:e=a.filter((e=>null==e.Group&&"Event"!=e.Type));break;case t.REWARD_CARDS.value:e=l;break;case t.ASYLUM.value:e=a.filter((e=>e.Group&&(e.Group.includes("AsylumPatient")||e.Group.includes("AsylumNurse"))));break;case t.DOMINANT_MISTRESS.value:e=a.filter((e=>e.Group&&(e.Group.includes("Dominant")||e.Group.includes("Mistress"))));break;case t.ABDL.value:e=a.filter((e=>e.Group&&(e.Group.includes("ABDLBaby")||e.Group.includes("ABDLMommy"))));break;case t.COLLEGE.value:e=a.filter((e=>e.Group&&(e.Group.includes("CollegeStudent")||e.Group.includes("CollegeTeacher"))));break;case t.SHIBARI_SENSEI_KNOT.value:e=a.filter((e=>e.Group&&(e.Group.includes("Shibari")||e.Group.includes("Sensei")||e.Group.includes("Knot"))));break;case t.PET.value:e=a.filter((e=>e.Group&&(e.Group.includes("Pet")||e.Group.includes("Owner"))));break;default:e=a.filter((e=>e.Group&&e.Group.includes(p)))}e=e.filter((e=>!l.some((t=>t.ID===e.ID))||n.includes(e.ID)));const o=Z(e);u=[...o],C=0,c=X(),G(c)}function X(){const e=30*C,t=f.querySelector("#MoonCEBCSearchCardInputId").value.length>0?y:u,n=t.length-e;return n>=30?t.slice(e,e+30):n<30&&n>0?t.slice(e,e+n):null}function Z(e){e.forEach(((t,n)=>{void 0===t&&(e[n]={ID:0,Name:"Error",Type:"Error",Title:"Error",Text:"Error",Reward:"Error",RewardMemberNumber:0,MoneyPerTurn:0,FamePerTurn:0,RequiredLevel:0,Group:["Error"]})}));let t=e.filter((e=>"Event"===e.Type)),n=e.filter((e=>"Event"!==e.Type));return t.sort(((e,t)=>(null==e.RequiredLevel?1:e.RequiredLevel)-(null==t.RequiredLevel?1:t.RequiredLevel))),n.sort(((e,t)=>(null==e.RequiredLevel?1:e.RequiredLevel)-(null==t.RequiredLevel?1:t.RequiredLevel))),n.sort(((e,t)=>{const n=(null===e.RequiredLevel?1:e.RequiredLevel)-(null===t.RequiredLevel?1:t.RequiredLevel);return 0==n?e.ID-t.ID:n})),[...n,...t]}function ee(e=null,t=!1){const n={Type:L,Content:"MoonCEBC",Sender:Player.MemberNumber,Dictionary:[]};e&&(n.Target=e);const l={Version:D,IsMenuOpen:t};n.Dictionary.push(l),ServerSend("ChatRoomChat",n)}function te(e){let t=null;return Array.isArray(e.Dictionary)&&(t=e.Dictionary.find((e=>e&&void 0!==e.Version&&void 0!==e.IsMenuOpen))),t||null}function ne(e){let t=[];for(let n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}}();